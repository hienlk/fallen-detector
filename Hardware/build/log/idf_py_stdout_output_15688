[1/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/server.c.obj
[2/9] Linking C static library esp-idf\main\libmain.a
[3/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\workspace\v1\build\bootloader\esp-idf\esptool_py && python E:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 E:/workspace/v1/build/bootloader/bootloader.bin"
Bootloader binary size 0x5170 bytes. 0x2e90 bytes (36%) free.
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable app-template.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32c3 image...
Merged 1 ELF section
Successfully created esp32c3 image.
Generated E:/workspace/v1/build/app-template.bin
[7/7] cmd.exe /C "cd /D E:\workspace\v1\build\esp-idf\esptool_py && python E:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/workspace/v1/build/partition_table/partition-table.bin E:/workspace/v1/build/app-template.bin"
app-template.bin binary size 0x91770 bytes. Smallest app partition is 0x100000 bytes. 0x6e890 bytes (43%) free.
